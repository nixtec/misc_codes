#!/bin/sh
#
# forwarder.sh
# automatically generated by 'make rcscripts'. DO NOT edit
#
# environment variables starts here
# environment variables
IFACE="eth"
RUNUSR="ayub"
NETWORK="192.168.0.0"
MASK="24"
BASEDIR="/var/dse"
VARDIR="/var/dse"
BINDIR="/var/dse/bin"
RCDIR="/var/dse/rc"
CFGDIR="/var/dse/cfg"
LOGDIR="/var/dse/log"
IFCFG="/var/dse/cfg/iface.cfg"
ADDRCFG="/var/dse/cfg/addrs.cfg"
PORTCFG="/var/dse/cfg/ports.cfg"
USRCFG="/var/dse/cfg/user.cfg"
SUBNET="192.168.0.0/24"
BINDADDR="192.168.0.255"
BINDCFG="/var/dse/cfg/bind.cfg"
CONFIG_H="config.h"
ADDRS="0"
PORTS="0"
EXENAME="forwarder"
EXEPATH="/var/dse/bin/forwarder"
EXECFG="/var/dse/cfg/exe.cfg"
INITSCRIPT="/etc/init.d/forwarder"
EXT=".sh"
FORWARDER_RC="forwarder.sh"
UPDIFLIST_RC="update-iflist.sh"
IPUP_RC="ip-up.sh"
IPDOWN_RC="ip-down.sh"
LOCAL_RC="local.sh"
FIREWALL_RC="firewall.sh"
BINFILES="forwarder"
RCFILES="forwarder.sh update-iflist.sh ip-up.sh ip-down.sh local.sh firewall.sh"
TARGETS="forwarder forwarder.debug"
OTHERS=""
ENVFILE="env.source"
LOCKFILE="/var/lock/subsys/forwarder"
# environment variables ends here

# function definition starts here
function start() {
  PID=`/sbin/pidof $EXEPATH`
  if [ "$PID" != "" ] ; then
    echo "$EXENAME already running. Try stopping first"
    return 1
  fi
  echo -n "Starting $EXENAME ..."
  $EXEPATH $BINDADDR &> "${LOGDIR}/${EXENAME}.log"&
  RETVAL=$?
  touch $LOCKFILE &> /dev/null
  return $RETVAL
}

function update() {
  echo -n "Updating interface list ..."
  PID=`/sbin/pidof $EXEPATH`
  if [ "$PID" = "" ] ; then
    echo "$EXENAME is not running"
    return 1
  fi
  kill -HUP $PID
  return $?
}

function stop() {
  echo -n "Stopping $EXENAME ..."
  PID=`/sbin/pidof $EXEPATH`
  if [ "$PID" = "" ] ; then
    echo "$EXENAME not running..."
    return 0
  fi
#  echo "Killing [$PID] ..."
  kill -INT $PID
  RETVAL=$?
  if [ -f $LOCKFILE ] ; then
    rm -f $LOCKFILE &> /dev/null
  fi
  return $RETVAL
}

function restart() {
  eval stop
  eval start
  return $?
}

function status() {
  echo "Status ..."
  PID=`/sbin/pidof $EXEPATH`
  if [ "$PID" = "" ] ; then
    echo "$EXENAME is not running"
  else
    echo "$EXENAME is running... pid=[$PID]"
    ps up $PID
  fi
  return $?
}

function list() {
  echo "List of addresses and ports to forward packets to"
  if [ -f $ADDRCFG ] ; then
    cat $ADDRCFG
  fi
  if [ -f $PORTCFG ] ; then
    cat $PORTCFG
  fi
  return $?
}

if [ $# -lt 1 ] ; then
  echo "Usage: $0 {start|stop|update|restart|status|list}"
  exit 1
fi

eval $1
RETVAL=$?

if [ $RETVAL -eq 0 ] ; then
  echo "[  OK  ]"
else
  echo "[FAILED]"
fi

exit $RETVAL

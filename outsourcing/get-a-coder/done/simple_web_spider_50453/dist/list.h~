/*
 * list.h
 * linked list header
 */
#ifndef LIST_H
#define LIST_H
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef enum {
  false, true
} bool;

typedef void *lelement_t;

struct lnode;
typedef struct lnode lnode_t;
typedef lnode_t *lpos_t;
typedef lnode_t *list_t;

struct lnode {
  lelement_t e;
  list_t next;
};

//typedef int (*compfunc)(void *e1, void *e2);
/* linked list methods */
list_t list_insert(list_t l, lelement_t e);
list_t list_delete(list_t l, lelement_t e, int (*compfunc)(void *, void *),
    bool free_element);
lpos_t list_find(list_t l, lelement_t e);
list_t list_destroy(list_t l, bool free_element);
size_t list_length(list_t l);

#define lelement_compare(e1, e2) (((nodeinfo_t *)(e1))->jid - ((job_t *)(e2))->jid)

#endif /* !LIST_H */
